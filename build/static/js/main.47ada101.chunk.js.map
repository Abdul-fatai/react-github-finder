{"version":3,"sources":["components/layout/spinner.gif","components/layout/Navbar.js","components/layout/Spinner.js","components/repos/RepoItem.js","components/repos/Repos.js","context/github/githubContext.js","components/users/User.js","context/alert/alertContext.js","components/layout/Alert.js","components/users/Search.js","components/users/UserItem.js","components/users/Users.js","components/pages/Home.js","components/pages/NotFound.js","components/pages/About.js","context/github/githubReducer.js","context/types.js","context/github/GithubState.js","context/alert/alertReducer.js","context/alert/AlertState.js","App.js","index.js"],"names":["module","exports","Navbar","icon","title","className","to","defaultProps","Spinner","src","spinner","alt","style","width","margin","display","RepoItem","repo","href","html_url","target","rel","name","Repos","repos","map","key","id","githubContext","createContext","User","match","useContext","GithubContext","getUser","loading","user","getUserRepos","useEffect","params","login","company","avatar_url","location","bio","blog","followers","following","public_repos","public_gists","hireable","alertContext","Alert","alert","AlertContext","type","msg","Search","useState","text","setText","onSubmit","e","preventDefault","setAlert","searchUsers","placeholder","value","onChange","users","length","onClick","clearUsers","UserItem","prototype","PropTypes","object","isRequired","userStyle","gridTemplateColumns","gridGap","Users","Home","NotFound","About","Fragment","state","action","payload","GithubState","props","useReducer","GithubReducer","dispatch","setLoading","Provider","a","async","axios","get","process","res","data","items","username","children","AlertState","AlertReducer","setTimeout","App","exact","path","component","NotFoud","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.47ada101.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spinner.078aa3f0.gif\";","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Navbar = ({ icon, title }) => {\r\n  return (\r\n    <nav className=\"navbar bg-dark\">\r\n      <h3>\r\n        <i className={icon} /> {title}\r\n      </h3>\r\n      <ul>\r\n        <li>\r\n          <Link to=\"/\">Home</Link>\r\n        </li>\r\n        <li>\r\n          <Link to=\"/about\">About</Link>\r\n        </li>\r\n      </ul>\r\n    </nav>\r\n  );\r\n};\r\n\r\nNavbar.defaultProps = {\r\n  title: 'Github Finder',\r\n  icon: 'fa fa-github'\r\n};\r\n\r\nNavbar.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  icon: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport spinner from './spinner.gif';\r\n\r\nconst Spinner = () => (\r\n  <div>\r\n    <img\r\n      src={spinner}\r\n      alt=\"loading...\"\r\n      style={{ width: '200px', margin: 'auto', display: 'block' }}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst RepoItem = ({ repo }) => {\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>\r\n        <a href={repo.html_url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n          {repo.name}\r\n        </a>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nRepoItem.propTypes = {\r\n  repo: PropTypes.object.isRequired\r\n};\r\nexport default RepoItem;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport RepoItem from './RepoItem';\r\n\r\nconst Repos = ({ repos }) => {\r\n  return repos.map(repo => <RepoItem repo={repo} key={repo.id} />);\r\n};\r\n\r\nRepos.propTypes = {\r\n  repos: PropTypes.array.isRequired\r\n};\r\n\r\nexport default Repos;\r\n","import { createContext } from 'react';\r\n\r\nconst githubContext = createContext();\r\n\r\nexport default githubContext;\r\n","import React, { Fragment, useEffect, useContext } from 'react';\r\nimport Spinner from '../layout/Spinner';\r\nimport Repos from '../repos/Repos';\r\nimport { Link } from 'react-router-dom';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst User = ({ match }) => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { getUser, loading, user, repos, getUserRepos } = githubContext;\r\n  useEffect(() => {\r\n    getUser(match.params.login);\r\n    getUserRepos(match.params.login);\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const {\r\n    name,\r\n    company,\r\n    avatar_url,\r\n    location,\r\n    bio,\r\n    blog,\r\n    login,\r\n    html_url,\r\n    followers,\r\n    following,\r\n    public_repos,\r\n    public_gists,\r\n    hireable\r\n  } = user;\r\n\r\n  if (loading) return <Spinner />;\r\n  return (\r\n    <Fragment>\r\n      <Link to=\"/\" className=\"btn btn-light\">\r\n        Back to Search\r\n      </Link>\r\n      Hireable: {''}\r\n      {hireable ? (\r\n        <i className=\"fa fa-check text-success\" />\r\n      ) : (\r\n        <i className=\"fa fa-times-circle text-danger\" />\r\n      )}\r\n      <div className=\"card grid-2\">\r\n        <div className=\"all-center\">\r\n          <img\r\n            src={avatar_url}\r\n            className=\"round-img\"\r\n            alt=\"\"\r\n            style={{ width: '150px' }}\r\n          />\r\n          <h1>{name}</h1>\r\n          <p>Location: {location}</p>\r\n        </div>\r\n        <div>\r\n          {bio && (\r\n            <Fragment>\r\n              <h3>Bio</h3>\r\n              <p>{bio}</p>\r\n            </Fragment>\r\n          )}\r\n          <a href={html_url} className=\"btn btn-dark my-1\">\r\n            Visit Github Profile\r\n          </a>\r\n          <ul>\r\n            <li>\r\n              {login && (\r\n                <Fragment>\r\n                  <strong>Username: </strong> {login}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {company && (\r\n                <Fragment>\r\n                  <strong>Company: </strong> {company}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n            <li>\r\n              {blog && (\r\n                <Fragment>\r\n                  <strong>Website: </strong> {blog}\r\n                </Fragment>\r\n              )}\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n      <div className=\"card text-center\">\r\n        <div className=\"badge badge-primary\">Followers: {followers}</div>\r\n        <div className=\"badge badge-success\">Following: {following}</div>\r\n        <div className=\"badge badge-light\">Public Repos: {public_repos}</div>\r\n        <div className=\"badge badge-dark\">Public Gists: {public_gists}</div>\r\n      </div>\r\n      <Repos repos={repos} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default User;\r\n","import { createContext } from 'react';\r\n\r\nconst alertContext = createContext();\r\n\r\nexport default alertContext;\r\n","import React, { useContext } from 'react';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Alert = () => {\r\n  const alertContext = useContext(AlertContext);\r\n\r\n  const { alert } = alertContext;\r\n  return (\r\n    alert !== null && (\r\n      <div className={`alert alert-${alert.type}`}>\r\n        <i className=\"fa fa-info-circle\"></i> {alert.msg}\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Alert;\r\n","import React, { useState, useContext } from 'react';\r\nimport GithubContext from '../../context/github/githubContext';\r\nimport AlertContext from '../../context/alert/alertContext';\r\n\r\nconst Search = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const alertContext = useContext(AlertContext);\r\n  const [text, setText] = useState('');\r\n  const onSubmit = e => {\r\n    e.preventDefault();\r\n    if (text === '') {\r\n      alertContext.setAlert('Please enter something', 'light');\r\n    } else {\r\n      githubContext.searchUsers(text);\r\n      setText('');\r\n    }\r\n  };\r\n  const onChange = e => setText(e.target.value);\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit} className=\"form\">\r\n        <input\r\n          type=\"text\"\r\n          name=\"text\"\r\n          placeholder=\"Search Users...\"\r\n          value={text}\r\n          onChange={onChange}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          value=\"Search\"\r\n          className=\"btn btn-dark btn-block\"\r\n        />\r\n      </form>\r\n      {githubContext.users.length > 0 && (\r\n        <button\r\n          className=\"btn btn-light btn-block text-center\"\r\n          onClick={githubContext.clearUsers}\r\n        >\r\n          Clear\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst UserItem = ({ user: { login, avatar_url, html_url } }) => {\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <img\r\n        src={avatar_url}\r\n        alt=\"\"\r\n        className=\"round-img\"\r\n        style={{ width: '60px' }}\r\n      />\r\n      <h2>{login}</h2>\r\n      <div>\r\n        <Link to={`/users/${login}`} className=\"btn btn-dark btn-sm my1\">\r\n          More\r\n        </Link>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nUserItem.prototype = {\r\n  user: PropTypes.object.isRequired\r\n};\r\n\r\nexport default UserItem;\r\n","import React, { useContext } from 'react';\r\nimport UserItem from './UserItem';\r\nimport Spinner from '../layout/Spinner';\r\nimport GithubContext from '../../context/github/githubContext';\r\n\r\nconst Users = () => {\r\n  const githubContext = useContext(GithubContext);\r\n  const { loading, users } = githubContext;\r\n\r\n  if (loading) {\r\n    return <Spinner />;\r\n  } else {\r\n    return (\r\n      <div style={userStyle}>\r\n        {users.map(user => (\r\n          <UserItem key={user.id} user={user} />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nconst userStyle = {\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(3, 1fr)',\r\n  gridGap: '1rem'\r\n};\r\n\r\nexport default Users;\r\n","import React, { Fragment } from 'react';\r\nimport Search from '../users/Search';\r\nimport Users from '../users/Users';\r\n\r\nconst Home = () => {\r\n  return (\r\n    <Fragment>\r\n      <Search />\r\n      <Users />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from 'react';\r\n\r\nconst NotFound = () => {\r\n  return (\r\n    <div className=\"card text-center\">\r\n      <h1>404</h1>\r\n      <h3>Page Not Found</h3>\r\n      <p className=\"lead\">The page you are looking for does not exits...</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NotFound;\r\n","import React from 'react';\r\n\r\nconst About = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <h1>About This App</h1>\r\n      <p>App to search Github users</p>\r\n      <p>Version: 1.0.0</p>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default About;\r\n","import {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS\r\n} from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SEARCH_USERS:\r\n      return {\r\n        ...state,\r\n        users: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.payload,\r\n        loading: false\r\n      };\r\n    case GET_REPOS:\r\n      return {\r\n        ...state,\r\n        repos: action.payload,\r\n        loading: false\r\n      };\r\n    case CLEAR_USERS:\r\n      return {\r\n        ...state,\r\n        users: [],\r\n        loading: false\r\n      };\r\n    case SET_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","export const SEARCH_USERS = 'SEARCH_USERS';\r\nexport const GET_USER = 'GET_USER';\r\nexport const CLEAR_USERS = 'CLEAR_USERS';\r\nexport const GET_REPOS = 'GET_REPOS';\r\nexport const SET_LOADING = 'SET_LOADING';\r\nexport const SET_ALERT = 'SET_ALERT';\r\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\r\n","import React, { useReducer } from 'react';\r\nimport axios from 'axios';\r\nimport GithubContext from './githubContext';\r\nimport GithubReducer from './githubReducer';\r\nimport {\r\n  SEARCH_USERS,\r\n  SET_LOADING,\r\n  CLEAR_USERS,\r\n  GET_USER,\r\n  GET_REPOS\r\n} from '../types';\r\n\r\nconst GithubState = props => {\r\n  const initialState = {\r\n    users: [],\r\n    user: {},\r\n    repos: [],\r\n    repo: [],\r\n    loading: false\r\n  };\r\n\r\n  const [state, dispatch] = useReducer(GithubReducer, initialState);\r\n\r\n  // Search Users\r\n  const searchUsers = async text => {\r\n    setLoading();\r\n    const res = await axios.get(\r\n      `https://api.github.com/search/users?q=${text}&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    dispatch({\r\n      type: SEARCH_USERS,\r\n      payload: res.data.items\r\n    });\r\n  };\r\n\r\n  // Get user\r\n  const getUser = async username => {\r\n    setLoading(true);\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}?client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    dispatch({\r\n      type: GET_USER,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  // Get Repos\r\n  const getUserRepos = async username => {\r\n    setLoading(true);\r\n    const res = await axios.get(\r\n      `https://api.github.com/users/${username}/repos?per_page=5&sort=created:asc&client_id=${process.env.REACT_APP_GITHUB_CLIENT_ID}&client_secret=${process.env.REACT_APP_GITHUB_CLIENT_SECRET}`\r\n    );\r\n    dispatch({\r\n      type: GET_REPOS,\r\n      payload: res.data\r\n    });\r\n  };\r\n\r\n  // Clear Users\r\n  const clearUsers = () => dispatch({ type: CLEAR_USERS });\r\n\r\n  // Set Loading\r\n  const setLoading = () => dispatch({ type: SET_LOADING });\r\n\r\n  return (\r\n    <GithubContext.Provider\r\n      value={{\r\n        users: state.users,\r\n        user: state.user,\r\n        repos: state.repos,\r\n        loading: state.loading,\r\n        searchUsers,\r\n        clearUsers,\r\n        getUser,\r\n        getUserRepos\r\n      }}\r\n    >\r\n      {props.children}\r\n    </GithubContext.Provider>\r\n  );\r\n};\r\n\r\nexport default GithubState;\r\n","import { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nexport default (state, action) => {\r\n  switch (action.type) {\r\n    case SET_ALERT:\r\n      return action.payload;\r\n\r\n    case REMOVE_ALERT:\r\n      return null;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import React, { useReducer } from 'react';\r\nimport AlertContext from './alertContext';\r\nimport AlertReducer from './alertReducer';\r\nimport { SET_ALERT, REMOVE_ALERT } from '../types';\r\n\r\nconst AlertState = props => {\r\n  const initialState = null;\r\n\r\n  const [state, dispatch] = useReducer(AlertReducer, initialState);\r\n\r\n  // Set Alert\r\n  const setAlert = (msg, type) => {\r\n    dispatch({\r\n      type: SET_ALERT,\r\n      payload: { msg, type }\r\n    });\r\n    setTimeout(() => dispatch({ type: REMOVE_ALERT }), 3000);\r\n  };\r\n\r\n  return (\r\n    <AlertContext.Provider\r\n      value={{\r\n        alert: state,\r\n        setAlert\r\n      }}\r\n    >\r\n      {props.children}\r\n    </AlertContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AlertState;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar';\nimport User from './components/users/User';\nimport Alert from './components/layout/Alert';\nimport Home from './components/pages/Home';\nimport NotFoud from './components/pages/NotFound';\nimport About from './components/pages/About';\n\nimport GithubState from './context/github/GithubState';\nimport AlertState from './context/alert/AlertState';\n\nimport './App.css';\n\nconst App = () => {\n  return (\n    <GithubState>\n      <AlertState>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <div className=\"container\">\n              <Alert />\n              <Switch>\n                <Route exact path=\"/\" component={Home} />\n                <Route exact path=\"/about\" component={About} />\n                <Route exact path=\"/users/:login\" component={User} />\n                <Route component={NotFoud} />\n              </Switch>\n            </div>\n          </div>\n        </Router>\n      </AlertState>\n    </GithubState>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}